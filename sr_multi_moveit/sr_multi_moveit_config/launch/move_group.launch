<launch>

  <arg name="pipeline" default="ompl"/>
  <!-- GDB Debug Option -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <!-- The name of the robot config file to load -->
  <arg name="robot_config_file" default=""/>

  <!-- Verbose Mode Option -->
  <arg name="info" default="$(arg debug)" />  
  <arg unless="$(arg info)" name="command_args" value="" />
  <arg     if="$(arg info)" name="command_args" value="--debug" />

  <!-- move_group settings -->
  <arg name="allow_trajectory_execution" default="true"/> 
  <arg name="fake_execution" default="false"/>
  <arg name="max_safe_path_cost" default="1"/>
  <arg name="jiggle_fraction" default="0.05" />
  <arg name="publish_monitored_planning_scene" default="true"/>

  <!--Should the planner yaml be automatically generated? -->
  <arg name="generate_planning_config" default="true"/>

  <!-- ik solver path -->
  <arg name="hand_ik_solver_path" default="$(find sr_moveit_hand_config)/config/kinematics_template.yaml"/>

  <!-- Planning Functionality -->
  <include ns="move_group" file="$(find sr_multi_moveit_config)/launch/planning_pipeline.launch.xml">
    <arg name="pipeline" value="$(arg pipeline)" />
    <arg name="generate_planning_config" value="$(arg generate_planning_config)" />
    <arg name="robot_config_file" value="$(arg robot_config_file)"/>
  </include>

  <!-- Inverse Kinematics -->
  <group ns="move_group">
    <node name="load_kinematics" pkg="sr_multi_moveit_config" type="generate_load_moveit_config.py" respawn="false" args="kinematics $(arg robot_config_file) $(arg hand_ik_solver_path)"/>
  </group>

  <!-- Trajectory Execution Functionality -->
  <include ns="move_group" file="$(find sr_multi_moveit_config)/launch/trajectory_execution.launch.xml" if="$(arg allow_trajectory_execution)">
    <arg name="moveit_manage_controllers" value="true" />
    <arg name="moveit_controller_manager" value="shadowrobot_motor" unless="$(arg fake_execution)"/>
    <arg name="moveit_controller_manager" value="fake" if="$(arg fake_execution)"/>
    <arg name="robot_config_file" value="$(arg robot_config_file)"/>
  </include>

  <!-- Sensors Functionality -->
  <include ns="move_group" file="$(find sr_multi_moveit_config)/launch/sensor_manager.launch.xml" if="$(arg allow_trajectory_execution)">
    <arg name="moveit_sensor_manager" value="shadowrobot_motor" /> 
  </include>

  <!-- Start the actual move_group node/action server -->
  <node name="conditional_delayed_rostool_action_multi" pkg="sr_utilities_common" type="conditional_delayed_rostool.py" output="screen" required="true">
    <param name="package_name" value="sr_multi_moveit_config" />
    <param name="executable_name" value="move_group_action_server.launch" />
    <rosparam param="params_list">[/robot_description, /robot_description_semantic]</rosparam>
    <param name="launch_args_list" value="allow_trajectory_execution:=$(arg allow_trajectory_execution)
    max_safe_path_cost:=$(arg max_safe_path_cost)
    jiggle_fraction:=$(arg jiggle_fraction)
    publish_monitored_planning_scene:=$(arg publish_monitored_planning_scene)" />
    <param name="timeout" value="20.0" />
  </node>

</launch>
