<launch>
  <!-- This launch file is for bimanual system consisting of ur arms and shadow dexterous hands -->

  <!-- set to false if you want to use real robots, true if you need the gazebo simulation -->
  <arg name="sim" default="true"/>
  <!-- Set to true for debugging -->
  <arg name="debug" default="false"/>
  <!-- Set to true to allow planning trajectories-->
  <arg name="use_moveit" default="true"/>
  <!--Choose planner library, options are ompl, stomp or sbpl-->
  <arg name="planning" default="ompl"/>
  <!--Should the planner yaml be automatically generated? -->
  <arg name="generate_planning_config" default="True"/>
  <!-- Set to false if you want to start without guis -->
  <arg name="gui" default="true"/>
  <arg name="verbose" default="true" />
  <!-- Set whether to load a scene to restrain the movement of the robot -->
  <arg name="scene" default="false"/>
  <!-- Set world value dependant on scene -->
  <arg name="world" default="$(find sr_description_common)/worlds/shadowhands_and_arms.world" unless="$(arg scene)"/>
  <arg name="world" default="$(find sr_description_common)/worlds/demo_space_large.world" if="$(arg scene)"/>
  <!-- Set the scene file -->
  <arg name="scene_file" default="$(find sr_description_common)/scenes/demo_space_large.scene"/>
  <!-- Set to true if you want the robot to start in the "home" positions -->
  <arg name="start_home" default="true"/>
  <!-- Definition of "home" position, in joint-angle pairs -->
  <arg name="home_angles" default="-J ra_shoulder_pan_joint 1.147 -J ra_elbow_joint 1.695 -J ra_wrist_1_joint -1.395 -J ra_wrist_2_joint -1.584 -J ra_shoulder_lift_joint -1.926 -J ra_wrist_3_joint 2.7 -J la_shoulder_pan_joint -1.147 -J la_elbow_joint -1.695 -J la_wrist_1_joint -1.75 -J la_wrist_2_joint 1.57 -J la_shoulder_lift_joint -1.22 -J la_wrist_3_joint -2.70"/>
  <!-- When cyberglove is used set "include_wrist_in_arm_controller:=false" as the wrist joints are part of the arm by default-->
  <!-- This will include the wrist joints in the hand controller and exclude them from the arm one -->
  <arg name="include_wrist_in_arm_controller" default="true"/>
  <!-- The robot state publisher publishing frequecy  -->
  <arg name="robot_state_pub_frequency" default="57"/>
  <!-- The joint state publisher publishing frequency  -->
  <arg name="joint_state_pub_frequency" default="321"/>

  <!-- HANDS CONFIG-->
  <arg name="rh_serial" default="1290"/>
  <arg name="lh_serial" default="1338"/>
  <arg name="rh_mapping_path" default="$(find sr_edc_launch)/mappings/default_mappings/rh_E_v3.yaml"/>
  <arg name="lh_mapping_path" default="$(find sr_edc_launch)/mappings/default_mappings/lh_E_v3.yaml"/>
  <!-- Allows to specify the ethernet interface/s to be used for ethercat devices. It defaults to the value of the env var ETHERCAT_PORT
       More than one interface can be specified by concatenating them using underscore as a separator (e.g eth1_eth2_eth3) -->
  <!--DO WE NEED TWO OF THESE? -->
  <arg name="eth_port" default="$(optenv ETHERCAT_PORT eth0)"/>

  <!-- ARMS CONFIG-->
  <arg name="arm_1_z" default="0.7551" if="$(arg scene)"/>
  <arg name="arm_1_z" default="0.0" unless="$(arg scene)"/>
  <arg name="arm_2_z" default="0.7551" if="$(arg scene)"/>
  <arg name="arm_2_z" default="0.0" unless="$(arg scene)"/>
  <arg name="arm_separation" default="1.5"/>
  <arg name="arm_robot_hw_1" default="$(find sr_robot_launch)/config/right_ur_arm_robot_hw.yaml"/>
  <arg name="arm_robot_hw_2" default="$(find sr_robot_launch)/config/left_ur_arm_robot_hw.yaml"/>

  <arg name="robot_description" default="'$(find sr_multi_description)/urdf/both_srhand_two_$(arg robot_model)_two_hands.urdf.xacro'"/>
  <arg name="robot_config_file" default="$(find sr_multi_moveit_config)/config/robot_configs/both_sh_two_$(arg robot_model)_two_hands.yaml"/>

  <include file="$(find sr_robot_launch)/launch/sr_ur_arms_hands.launch">
    <arg name="sim" value="$(arg sim)"/>
    <arg name="debug" default="$(arg debug)"/>
    <arg name="use_moveit" default="$(arg use_moveit)"/>
    <arg name="planning" default="$(arg planning)"/>
    <arg name="generate_planning_config" value="$(arg generate_planning_config)"/>
    <arg name="gui" default="$(arg gui)"/>
    <arg name="verbose" default="$(arg verbose)" />
    <arg name="world" value="$(arg world)"/>

    <arg name="rh_serial" value="$(arg rh_serial)"/>
    <arg name="lh_serial" value="$(arg lh_serial)"/>
    <arg name="rh_mapping_path" value="$(arg rh_mapping_path)"/>
    <arg name="lh_mapping_path" value="$(arg lh_mapping_path)"/>

    <arg name="arm_1_z" value="$(arg arm_1_z)"/>
    <arg name="arm_2_z" value="$(arg arm_2_z)"/>
    <arg name="arm_separation" value="$(arg arm_separation)"/>
    <arg name="arm_1_program_path" default="$(arg arm_1_program_path)/"/>
    <arg name="arm_2_program_path" default="$(arg arm_2_program_path)/"/>
    <arg name="arm_robot_hw_1" default="$(arg arm_robot_hw_1)"/>
    <arg name="arm_robot_hw_2" default="$(arg arm_robot_hw_2)"/>
    <arg name="include_wrist_in_arm_controller" default="true"/>

    <arg name="robot_description" value="$(arg robot_description)"/>
    <arg name="robot_config_file" value="$(arg robot_config_file)"/>
    <arg name="robot_model" value="ur10"/>
    <arg name="robot_name" value="$(arg robot_model)srh"/>

    <arg name="scene" value="$(arg scene)"/>
    <arg name="scene_file" value="$(arg scene_file)"/>
    <arg name="start_home" value="$(arg start_home)"/>
    <arg name="home_angles" value="$(arg home_angles)"/>
    <arg name="include_wrist_in_arm_controller" value="$(arg include_wrist_in_arm_controller)"/>

    <arg name="robot_state_pub_frequency" default="57"/>
    <!-- The joint state publisher publishing frequency  -->
  <arg name="joint_state_pub_frequency" default="321"/>
  </include>
</launch>
