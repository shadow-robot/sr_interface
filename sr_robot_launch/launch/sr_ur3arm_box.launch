<launch>
  <!-- This launch file is for a ur10 arm and box -->

  <!-- set to false if you want to use real robots, true if you need the gazebo simulation -->
  <arg name="sim" default="true"/>
  <!-- Set to true for debugging -->
  <arg name="debug" default="false"/>
  <!-- Set to true to allow planning trajectories-->
  <arg name="use_moveit" default="true"/>
  <!--Choose planner library, options are ompl, stomp or sbpl-->
  <arg name="planning" default="ompl"/>
  <!-- Set to false if you want to start without guis -->
  <arg name="gui" default="true"/>
  <arg name="verbose" default="true"/>
  <!-- Set whether to load a scene to restrain the movement of the robot -->
  <arg name="scene" default="false"/>
    <!-- Set the scene file -->
  <arg name="scene_file" default="$(find sr_description_common)/scenes/demo_space_large.scene"/>
  <!-- Set world value dependant on scene -->
  <arg name="world" default="$(find sr_description_common)/worlds/shadowhands_and_arms.world" unless="$(arg scene)"/>
  <arg name="world" default="$(find sr_description_common)/worlds/demo_space_large.world" if="$(arg scene)"/>
  <!-- Set to true if you want the robot to start in the "home" positions -->
  <arg name="start_home" default="false"/>
  <!-- Definition of "home" position, in joint-angle pairs -->
  <arg name="home_angles" default="-J ra_shoulder_pan_joint 1.147 -J ra_elbow_joint 1.695 -J ra_wrist_1_joint -1.395 -J ra_wrist_2_joint -1.584 -J ra_shoulder_lift_joint -1.926 -J ra_wrist_3_joint 1.830"/>
  <!-- Set this to true if you run the hardware loop on a remote computer -->
  <arg name="external_control_loop" default="false"/>
  <!-- The robot state publisher publishing frequency  -->
  <arg name="robot_state_pub_frequency" default="250"/>
  <!-- The joint state publisher publishing frequency  -->
  <arg name="joint_state_pub_frequency" default="125"/>

  <!-- ARM CONFIG-->
  <arg name="arm_prefix" default="ra"/>
  <arg name="side" default="right"/>
  <arg name="arm_model" default="ur3"/>
  <arg name="initial_z" default="0.7751" if="$(arg scene)"/>
  <arg name="initial_z" default="0.1" unless="$(arg scene)"/>
  <arg name="arm_robot_hw" default="$(find sr_robot_launch)/config/$(arg side)_ur_arm_robot_hw.yaml"/>
  <arg name="arm_controller" default="$(find sr_robot_launch)/config/$(arg side)_ur_arm_controller.yaml"/>
  <arg name="arm_speed_scale" default="0.5"/>
  <!-- Set to true to spawn trajectory controllers for the arms (the trajectory controller overwrites continuously the joint position command, preventing direct control via topics-->
  <arg name="arm_trajectory" default="true"/>
  <!-- Set to true to spawn group position controllers for the arms -->
  <arg name="arm_position" default="$(eval not arm_trajectory)"/>
  <param name="description_read_repetitions" value="50"/>

  <!-- ROBOT CONFIG-->
  <arg name="robot_description" default="'$(find sr_box_ur10_moveit_config)/config/$(arg arm_model)_with_box.urdf.xacro'"/>
  <arg name="robot_config_file" default="$(find sr_box_ur10_moveit_config)/config/robot_configs/$(arg side)_$(arg arm_model).yaml"/>
  <arg name="robot_name" default="ursrbox"/>

  <!-- Logging -->
  <include file="$(find sr_logging_common)/launch/sr_rosbag_log.launch"/>

  <!-- SIMULATED ROBOTS -->
  <group if="$(arg sim)">
    <arg name="paused" value="$(arg start_home)"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(arg world)"/>
      <arg name="gui" default="$(arg gui)"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="debug" value="$(arg debug)"/>
      <arg name="verbose" value="$(arg verbose)"/>
    </include>
    <param name="robot_description" command="xacro $(arg robot_description) initial_z:=$(arg initial_z)"/>

    <arg if="$(arg start_home)" name="spawn_model_extra_args" value="-unpause $(arg home_angles)" />
    <arg unless="$(arg start_home)" name="spawn_model_extra_args" value="" />
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model $(arg robot_name) $(arg spawn_model_extra_args)" respawn="false" output="screen"/>

    <!-- ARM -->
    <rosparam if="$(arg arm_trajectory)" file="$(find sr_box_ur10_moveit_config)/config/gazebo/$(arg arm_prefix)_trajectory_controller.yaml" command="load"/>
    <rosparam if="$(arg arm_position)" file="$(find sr_box_ur10_moveit_config)/config/gazebo/$(arg arm_prefix)_group_position_controller.yaml" command="load"/>
    <include file="$(find ros_ethercat_model)/launch/joint_state_publisher.launch" >
      <arg name="publish_rate" value="$(arg joint_state_pub_frequency)"/>
    </include>

    <node if="$(arg arm_trajectory)" name="arm_trajectory_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="$(arg arm_prefix)_trajectory_controller"/>
    <node if="$(arg arm_position)" name="arm_group_position_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="$(arg arm_prefix)_group_position_controller"/>

    <!-- Robot state publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="$(arg robot_state_pub_frequency)"/>
      <param name="tf_prefix" type="string" value=""/>
    </node>

    <!-- Set scene for robot - restrains movement -->
    <group if="$(arg scene)">
      <include if="$(arg use_moveit)" file="$(find gazebo2rviz)/launch/gazebo2moveit.launch">
        <arg name="frequency" default="1" />
      </include>
    </group>
  </group>

  <!-- REAL ROBOTS -->
  <group unless="$(arg sim)">
    <group unless="$(arg external_control_loop)">
      <include file="$(find sr_robot_launch)/launch/sr_hardware_control_loop.launch">
        <arg name="debug" default="$(arg debug)"/>
        <arg name="initial_z" default="0.7551" if="$(arg scene)"/>
        <arg name="initial_z" default="0.1" unless="$(arg scene)"/>
        <arg name="robot_description" value="$(arg robot_description)"/>
        <arg name="side" value="$(arg side)"/>
        <arg name="robot_model" value="$(arg arm_model)"/>
        <arg name="arm_robot_hw" value="$(arg arm_robot_hw)"/>
        <arg name="arm_trajectory" default="$(arg arm_trajectory)"/>
        <arg name="arm_position" default="$(arg arm_position)"/>
        <arg name="arm_speed_scale" value="$(arg arm_speed_scale)"/>
        <arg name="hand_ctrl" default="false"/>
        <arg name="robot_state_pub_frequency" value="$(arg robot_state_pub_frequency)"/>
        <arg name="joint_state_pub_frequency" value="$(arg joint_state_pub_frequency)"/>
      </include>
    </group>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="$(arg robot_state_pub_frequency)"/>
      <param name="tf_prefix" type="string" value="" />
    </node>
    <!-- Set scene for robot after delay to start after moveit - restrains movement -->
    <node if="$(arg scene)" pkg="sr_utilities_common" type="timed_roslaunch.sh" args="8 sr_box_ur10_moveit_config scene.launch
      scene_file:=$(arg scene_file)" name="timed_publish_moveit_scene" output="screen"/>

  </group>

  <rosparam file="$(arg robot_config_file)"/>

  <!-- Launch moveit configuration after delay to wait for robot description to be avalible -->
  <node if="$(arg use_moveit)" pkg="sr_utilities_common" type="timed_roslaunch.sh" args="5 sr_box_ur10_moveit_config planning_and_execution.launch
    use_gui:=$(arg gui)" name="timed_roslaunch" output="screen"/>
</launch>
