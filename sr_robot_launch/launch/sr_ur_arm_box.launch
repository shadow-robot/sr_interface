<launch>
  <!-- This launch file is for a ur arm and box -->

  <!-- set to false if you want to use real robots, true if you need the gazebo simulation -->
  <arg name="sim" default="false"/>
  <!-- Set to true for debugging -->
  <arg name="debug" default="false"/>
  <!-- Set to true to allow planning trajectories-->
  <arg name="use_moveit" default="true"/>
  <!--Choose planner library, options are ompl, stomp or sbpl-->
  <arg name="planning" default="ompl"/>
  <!-- Set to false if you want to start without guis -->
  <arg name="gui" default="true"/>
  <arg name="verbose" default="true"/>
  <!-- Set whether to load a scene to restrain the movement of the robot -->
  <arg name="scene" default="false"/>
    <!-- Set the scene file -->
  <arg name="scene_file" default="$(find sr_description_common)/scenes/demo_space_large_bimanual.scene"/>
  <!-- Set world value dependant on scene -->
  <arg name="world" default="$(find sr_description_common)/worlds/shadowhands_and_arms.world" unless="$(arg scene)"/>
  <arg name="world" default="$(find sr_description_common)/worlds/demo_space_large_bimanual.world" if="$(arg scene)"/>

  <!-- ROBOT CONFIG-->
  <arg name="side" default="right"/>
  <arg name="side_letter" value="$(eval side[0])"/>
  <arg name="arm_prefix" value="$(arg side_letter)a"/>
  <arg name="robot_model" default="ur10e"/>

  <!-- Set to true if you want the robot to start in the "home" positions -->
  <arg name="start_home" default="true"/>
  <!-- Definition of "home" position, in joint-angle pairs -->
  <arg name="home_angles" unless="$(eval side=='left')" default="-J ra_shoulder_pan_joint 0.0 -J ra_elbow_joint 2.0 -J ra_wrist_1_joint -0.733 -J ra_wrist_2_joint 1.5708 -J ra_shoulder_lift_joint -1.25 -J ra_wrist_3_joint -3.1416"/>
  <arg name="home_angles" if="$(eval side=='left')" default="-J la_shoulder_pan_joint 0.0 -J la_elbow_joint -2.0 -J la_wrist_1_joint -2.4 -J la_wrist_2_joint -1.5708 -J la_shoulder_lift_joint -1.89 -J la_wrist_3_joint 3.1416"/>
  <!-- Set this to true if you run the hardware loop on a remote computer -->
  <arg name="external_control_loop" default="false"/>
  <!-- The robot state publisher publishing frequency  -->
  <arg name="robot_state_pub_frequency" default="250"/>
  <!-- The joint state publisher publishing frequency  -->
  <arg name="joint_state_pub_frequency" default="125"/>

  <!-- ARM CONFIG-->
  <arg name="initial_z" default="0.7521" if="$(arg scene)"/>
  <arg name="initial_z" default="0.1" unless="$(arg scene)"/>
  <arg name="initial_y" default="0.0"/>
  <arg name="initial_yaw" default="0.0"/>

  <arg name="kinematics_config" default="$(find ur_description)/config/$(arg robot_model)/default_kinematics.yaml"/>
  <rosparam command="load" file="$(arg kinematics_config)" ns="$(arg arm_prefix)_sr_ur_robot_hw"/>

  <arg name="arm_speed_scale" default="0.5"/>
  <arg name="arm_payload_mass" default="0"/>
  <arg name="arm_payload_cog" default="[0.0, 0.0, 0.0]"/>
  
  <!-- Set to true to spawn trajectory controllers for the arms (the trajectory controller overwrites continuously the joint position command, preventing direct control via topics-->
  <arg name="arm_trajectory" default="true"/>
  <!-- Set to true to spawn group position controllers for the arms -->
  <arg name="arm_position" default="$(eval not arm_trajectory)"/>

  <!-- SIMULATED ROBOTS -->
  <group if="$(arg sim)">
    <include file="$(find sr_robot_launch)/launch/sr_simulation_control_loop.launch">
      <arg name="debug" value="$(arg debug)"/>
      <arg name="scene" value="$(arg scene)"/>
      <arg name="world" value="$(arg world)"/>
      <arg name="start_home" value="$(arg start_home)"/>
      <arg name="home_angles" value="$(arg home_angles)"/>
      <arg name="initial_z" value="$(arg initial_z)"/>
      <arg name="initial_y" value="$(arg initial_y)"/>
      <arg name="initial_yaw" value="$(arg initial_yaw)"/>
      <arg name="robot_state_pub_frequency" value="$(arg robot_state_pub_frequency)"/>
      <arg name="joint_state_pub_frequency" value="$(arg joint_state_pub_frequency)"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="verbose" value="$(arg verbose)" />
      <arg name="side" value="$(arg side)"/>
      <arg name="arm" value="true"/>
      <arg name="hand" value="false"/>
      <arg name="arm_ctrl" value="true"/>
    </include>
  </group>

  <!-- REAL ROBOTS -->
  <group unless="$(arg sim)">
    <group unless="$(arg external_control_loop)">
      <include file="$(find sr_robot_launch)/launch/sr_hardware_control_loop.launch">
        <arg name="debug" default="$(arg debug)"/>
        <arg name="initial_z" default="0.7521" if="$(arg scene)"/>
        <arg name="initial_z" default="0.1" unless="$(arg scene)"/>
        <arg name="side" value="$(arg side)"/>
        <arg name="robot_model" value="$(arg robot_model)"/>
        <arg name="arm_trajectory" default="$(arg arm_trajectory)"/>
        <arg name="arm_position" default="$(arg arm_position)"/>
        <arg name="arm_speed_scale" value="$(arg arm_speed_scale)"/>
        <arg name="arm_payload_mass" value="$(arg arm_payload_mass)"/>
        <arg name="arm_payload_cog" value="$(arg arm_payload_cog)"/>
        <arg name="hand" default="false"/>
        <arg name="robot_state_pub_frequency" value="$(arg robot_state_pub_frequency)"/>
        <arg name="joint_state_pub_frequency" value="$(arg joint_state_pub_frequency)"/>
      </include>
    </group>

    <!-- Set scene for robot after delay to start after moveit - restrains movement -->
    <group if="$(arg scene)">
      <node name="conditional_delayed_rostool_arm_scene" pkg="sr_utilities_common" type="conditional_delayed_rostool.py" output="screen">
        <param name="package_name" value="sr_box_ur10_moveit_config" />
        <param name="executable_name" value="scene.launch" />
        <rosparam param="params_list">[/robot_description, /robot_description_semantic]</rosparam>
        <param name="launch_args_list" value="scene_file:=$(arg scene_file)" />
        <param name="timeout" value="20.0" />
      </node>
    </group>
  </group>

  <!-- Launch moveit configuration after delay to wait for robot description to be avalible -->
  <group if="$(arg use_moveit)">
    <node name="conditional_delayed_rostool_rviz_multi" pkg="sr_utilities_common" type="conditional_delayed_rostool.py" output="screen">
      <param name="package_name" value="sr_box_ur10_moveit_config" />
      <param name="executable_name" value="planning_and_execution.launch" />
      <rosparam param="params_list">[/robot_description]</rosparam>
      <param name="launch_args_list" value="side:=$(arg side) use_gui:=$(arg gui)" />
      <param name="timeout" value="20.0" />
    </node>
  </group>

  <!-- Logging -->
  <include file="$(find sr_logging_common)/launch/sr_rosbag_log.launch"/>
</launch>
