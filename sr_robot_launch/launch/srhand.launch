<launch>
  <!-- This launch file is for shadow hand only -->
  <arg name="hand_id" default="rh"/>
  <!-- set to false if you want to use real robots, true if you need the gazebo simulation -->
  <arg name="sim" default="true"/>
  <!-- Set to true for debugging -->
  <arg name="debug" default="false"/>
  <!-- Set to true to spawn trajectory controllers for the hands(the trajectory controller overwrites continuously the joint position command, preventing direct control via topics-->
  <arg name="hand_trajectory" default="true"/>
  <!-- Set to true to spawn the position controllers for the hands-->
  <arg name="hand_ctrl" default="true"/>
  <!-- Set to true to use pwm, false for torque -->
  <arg name="pwm_control" default="true"/>
  <!-- Serial number of the hand to be used-->
  <arg name="hand_serial" default="1322"/>
  <!-- Loads the robot description -->
  <arg name="robot_description" default="'$(find sr_description)/robots/shadowhand_motor.urdf.xacro'"/>
  <!-- Allows to specify the ethernet interface/s to be used for ethercat devices. It defaults to the value of the env var ETHERCAT_PORT
       More than one interface can be specified by concatenating them using underscore as a separator (e.g eth1_eth2_eth3) -->
  <arg name="eth_port" default="$(optenv ETHERCAT_PORT eth0)"/>
  <!-- Set to true to allow planning trajectories-->
  <arg name="use_moveit" default="true"/>
  <!-- Set to false if you want to start without guis -->
  <arg name="gui" default="true"/>
  <!-- the path to the mapping files -->
  <arg name="mapping_path" default="$(find sr_edc_launch)/mappings/default_mappings/rh_E_v3.yaml"/>


  <!-- SIMULATED ROBOTS -->
  <group if="$(arg sim)">
    <arg name="world_name" value="$(find sr_description)/other/worlds/shadowhand.world"/>
    <arg name="paused" value="false"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" default="$(arg world_name)"/>
      <arg name="gui" default="$(arg gui)"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>
    <param name="/hand/mapping/$(arg hand_serial)" value="$(arg hand_id)"/>
    <param name="/hand/joint_prefix/$(arg hand_serial)" value="$(arg hand_id)_"/>
    <param name="robot_description" command="$(find xacro)/xacro.py $(arg robot_description)"/>
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model usrh -z 0.0 "
          respawn="false" output="screen"/>
    <rosparam command="load" file="$(find sr_description)/hand/config/$(arg hand_id)_controller_gazebo.yaml"/>
    <include file="$(find ros_ethercat_model)/launch/joint_state_publisher.launch" />
    <!-- Robot state publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" type="string" value="" />
    </node>
  </group>

  <!-- REAL ROBOTS -->
  <group unless="$(arg sim)">
    <include file="$(find sr_edc_launch)/sr_edc.launch">
      <arg name="debug" value="$(arg debug)"/>
      <arg name="eth_port" value="$(arg eth_port)"/>
      <arg name="robot_description" value="$(arg robot_description)"/>
      <arg name="pwm_control" value="$(arg pwm_control)"/>
      <arg name="hand_serial" value="$(arg hand_serial)"/>
      <arg name="hand_id" value="$(arg hand_id)"/>
      <arg name="mapping_path" value="$(arg mapping_path)"/>
    </include>
  </group>

  <!-- MOVEIT -->
  <group if="$(arg use_moveit)">
    <include file="$(find sr_moveit_hand_config)/launch/moveit_planning_and_execution.launch">
      <arg name="load_robot_description" value="false"/>
      <arg name="gui" default="$(arg gui)"/>
    </include>
    <include file="$(find sr_moveit_hand_config)/launch/default_warehouse_db.launch"/>
  </group>

  <!-- Trajectory controller -->
  <group if="$(arg hand_ctrl)">
    <node name="$(arg hand_id)_trajectory_controller" pkg="sr_utilities" type="trajectory_controller_spawner.py" output="screen">
      <param name="hand_trajectory" value ="$(arg hand_trajectory)"/>
      <param name="wait_for" value ="/calibrated" unless="$(arg sim)"/>
    </node>
  </group>
</launch>
